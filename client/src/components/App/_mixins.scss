@use './vars' as *;
@mixin flex-center-horizontal {
  display: flex;
  justify-content: center;
  align-items: center;
}
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
@mixin flex-end {
  display: flex;
  justify-content: flex-end;
  align-items: center;
}
@mixin transition-background-color($transition-duration: 1s, $timing: ease) {
  transition: background-color $transition-duration $timing;
}
@mixin label-style-one {
  width: 100%;
  font-size: 1.5em;
  color: $primary-color-text;
  font-weight: 500;
}
@mixin select-style-one {
  display: block;
  width: inherit;
  margin: 0.5rem auto;
  box-shadow: 0px -5px 5px -5px rgba(34, 60, 80, 0.6);
  color: $secondary-color-text;
  // padding: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
  box-sizing: border-box;
  height: auto;
  font-size: 0.9em;
}
@mixin input-style-one {
  display: block;
  width: inherit;
  margin: 0.5rem auto;
  box-shadow: 0px -5px 5px -5px rgba(34, 60, 80, 0.6);
  color: $secondary-color-text;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
  box-sizing: border-box;
  height: auto;
  font-size: 0.9em;
  // Стиль для focus
  &:focus {
    color: $secondary-color-text;
  }
}
@mixin input-auto-complete {
  display: block;
  width: inherit;
  box-shadow: 0px -5px 5px -5px rgba(34, 60, 80, 0.6);
  // color: $secondary-color-text;
  padding: 10px;
  border: 1px solid #ddd;
  // border-radius: 4px;
  box-sizing: border-box;
  height: auto;
  font-size: 0.9em;
}
@mixin textarea-style-one {
  font-family: $main-font;
  background: #ffffff;
  resize: none;
  display: block;
  width: inherit;
  margin: 0.5rem auto;
  height: auto;
  box-shadow: 0px -5px 5px -5px rgba(34, 60, 80, 0.6);
  color: $secondary-color-text;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
  box-sizing: border-box;
  vertical-align: top;
  height: auto;
  font-size: 0.9em;
}
@mixin box-shadow-card {
  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);
}
@mixin active-btn {
  user-select: none;
  cursor: pointer;
  border-radius: 4px;
  &:active {
    transform: scale(0.8);
  }
}

@mixin moving($name, $start, $end, $duration: 1s, $delay: 0ms, $timing: ease) {
  @keyframes #{$name} {
    from {
      @each $prop, $value in $start {
        #{$prop}: $value;
      }
    }
    to {
      @each $prop, $value in $end {
        #{$prop}: $value;
      }
    }
  }
  & {
    animation: $name $duration $delay $timing forwards;
    -webkit-animation: $name $duration $delay $timing forwards;
  }
}
@mixin rotateZ($name, $end, $duration: 1s, $delay: 500s, $timing: ease) {
  @keyframes #{$name} {
    to {
      @each $prop, $value in $end {
        #{$prop}: $value;
      }
    }
  }
  & {
    animation: $name $duration $timing $delay forwards;
    -webkit-animation: $name $duration $timing $delay forwards;
  }
}
@mixin rotate-reverseZ($name, $end, $duration, $delay, $timing: ease) {
  @keyframes #{$name} {
    to {
      @each $prop, $value in $end {
        #{$prop}: $value;
      }
    }
  }
  & {
    animation: $name $duration $timing $delay forwards;
    -webkit-animation: $name $duration $timing $delay forwards;
  }
}
